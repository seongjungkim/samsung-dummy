/* Disable minification (remove `.min` from URL path) for more info */

(function(self, undefined) {
    function Call(t, l) {
        var n = arguments.length > 2 ? arguments[2] : [];
        if (!1 === IsCallable(t))
            throw new TypeError(Object.prototype.toString.call(t) + "is not a function.");
        return t.apply(l, n)
    }
    function CreateMethodProperty(e, r, t) {
        var a = {
            value: t,
            writable: !0,
            enumerable: !1,
            configurable: !0
        };
        Object.defineProperty(e, r, a)
    }
    function Get(n, t) {
        return n[t]
    }
    function HasOwnProperty(r, t) {
        return Object.prototype.hasOwnProperty.call(r, t)
    }
    function IsCallable(n) {
        return "function" == typeof n
    }
    function SameValueNonNumber(e, n) {
        return e === n
    }
    function ToInteger(n) {
        var i = Number(n);
        return isNaN(i) ? 0 : 1 / i === Infinity || 1 / i == -Infinity || i === Infinity || i === -Infinity ? i : (i < 0 ? -1 : 1) * Math.floor(Math.abs(i))
    }
    function ToLength(n) {
        var t = ToInteger(n);
        return t <= 0 ? 0 : Math.min(t, Math.pow(2, 53) - 1)
    }
    function ToObject(e) {
        if (null === e || e === undefined)
            throw TypeError();
        return Object(e)
    }
    function GetV(t, e) {
        return ToObject(t)[e]
    }
    function GetMethod(e, n) {
        var r = GetV(e, n);
        if (null === r || r === undefined)
            return undefined;
        if (!1 === IsCallable(r))
            throw new TypeError("Method not callable: " + n);
        return r
    }
    function Type(e) {
        switch (typeof e) {
        case "undefined":
            return "undefined";
        case "boolean":
            return "boolean";
        case "number":
            return "number";
        case "string":
            return "string";
        case "symbol":
            return "symbol";
        default:
            return null === e ? "null" : "Symbol"in self && (e instanceof self.Symbol || e.constructor === self.Symbol) ? "symbol" : "object"
        }
    }
    function OrdinaryToPrimitive(r, t) {
        if ("string" === t)
            var e = ["toString", "valueOf"];
        else
            e = ["valueOf", "toString"];
        for (var i = 0; i < e.length; ++i) {
            var n = e[i]
              , a = Get(r, n);
            if (IsCallable(a)) {
                var o = Call(a, r);
                if ("object" !== Type(o))
                    return o
            }
        }
        throw new TypeError("Cannot convert to primitive.")
    }
    function SameValueZero(n, e) {
        return Type(n) === Type(e) && ("number" === Type(n) ? !(!isNaN(n) || !isNaN(e)) || (1 / n === Infinity && 1 / e == -Infinity || (1 / n == -Infinity && 1 / e === Infinity || n === e)) : SameValueNonNumber(n, e))
    }
    function ToPrimitive(e) {
        var t = arguments.length > 1 ? arguments[1] : undefined;
        if ("object" === Type(e)) {
            if (arguments.length < 2)
                var i = "default";
            else
                t === String ? i = "string" : t === Number && (i = "number");
            var r = "function" == typeof self.Symbol && "symbol" == typeof self.Symbol.toPrimitive ? GetMethod(e, self.Symbol.toPrimitive) : undefined;
            if (r !== undefined) {
                var n = Call(r, e, [i]);
                if ("object" !== Type(n))
                    return n;
                throw new TypeError("Cannot convert exotic object to primitive.")
            }
            return "default" === i && (i = "number"),
            OrdinaryToPrimitive(e, i)
        }
        return e
    }
    function ToString(t) {
        switch (Type(t)) {
        case "symbol":
            throw new TypeError("Cannot convert a Symbol value to a string");
        case "object":
            return ToString(ToPrimitive(t, String));
        default:
            return String(t)
        }
    }
    function ToPropertyKey(r) {
        var i = ToPrimitive(r, String);
        return "symbol" === Type(i) ? i : ToString(i)
    }
    if (!("includes"in Array.prototype)) {
        CreateMethodProperty(Array.prototype, "includes", function e(r) {
            "use strict";
            var t = ToObject(this)
              , o = ToLength(Get(t, "length"));
            if (0 === o)
                return !1;
            var n = ToInteger(arguments[1]);
            if (n >= 0)
                var a = n;
            else
                (a = o + n) < 0 && (a = 0);
            for (; a < o; ) {
                var i = Get(t, ToString(a));
                if (SameValueZero(r, i))
                    return !0;
                a += 1
            }
            return !1
        });
    }
    if (!((function(n) {
        if (!("Event"in n))
            return !1
        try {
            return new Event("click"),
            !0
        } catch (t) {
            return !1
        }
    }
    )(self))) {
        !function() {
            function e(e, t) {
                if (!e)
                    throw new Error("Not enough arguments");
                var n;
                if ("createEvent"in document) {
                    n = document.createEvent("Event");
                    var o = !(!t || t.bubbles === undefined) && t.bubbles
                      , i = !(!t || t.cancelable === undefined) && t.cancelable;
                    return n.initEvent(e, o, i),
                    n
                }
                return n = document.createEventObject(),
                n.type = e,
                n.bubbles = !(!t || t.bubbles === undefined) && t.bubbles,
                n.cancelable = !(!t || t.cancelable === undefined) && t.cancelable,
                n
            }
            var t = {
                click: 1,
                dblclick: 1,
                keyup: 1,
                keypress: 1,
                keydown: 1,
                mousedown: 1,
                mouseup: 1,
                mousemove: 1,
                mouseover: 1,
                mouseenter: 1,
                mouseleave: 1,
                mouseout: 1,
                storage: 1,
                storagecommit: 1,
                textinput: 1
            };
            if ("undefined" != typeof document && "undefined" != typeof window) {
                var n = window.Event && window.Event.prototype || null;
                e.NONE = 0,
                e.CAPTURING_PHASE = 1,
                e.AT_TARGET = 2,
                e.BUBBLING_PHASE = 3,
                window.Event = Window.prototype.Event = e,
                n && Object.defineProperty(window.Event, "prototype", {
                    configurable: !1,
                    enumerable: !1,
                    writable: !0,
                    value: n
                }),
                "createEvent"in document || (window.addEventListener = Window.prototype.addEventListener = Document.prototype.addEventListener = Element.prototype.addEventListener = function o() {
                    var e = this
                      , n = arguments[0]
                      , o = arguments[1];
                    if (e === window && n in t)
                        throw new Error("In IE8 the event: " + n + " is not available on the window object. Please see https://github.com/Financial-Times/polyfill-service/issues/317 for more information.");
                    e._events || (e._events = {}),
                    e._events[n] || (e._events[n] = function(t) {
                        var n, o = e._events[t.type].list, i = o.slice(), r = -1, c = i.length;
                        for (t.preventDefault = function a() {
                            !1 !== t.cancelable && (t.returnValue = !1)
                        }
                        ,
                        t.stopPropagation = function l() {
                            t.cancelBubble = !0
                        }
                        ,
                        t.stopImmediatePropagation = function s() {
                            t.cancelBubble = !0,
                            t.cancelImmediate = !0
                        }
                        ,
                        t.currentTarget = e,
                        t.relatedTarget = t.fromElement || null,
                        t.target = t.target || t.srcElement || e,
                        t.timeStamp = (new Date).getTime(),
                        t.clientX && (t.pageX = t.clientX + document.documentElement.scrollLeft,
                        t.pageY = t.clientY + document.documentElement.scrollTop); ++r < c && !t.cancelImmediate; )
                            r in i && (n = i[r],
                            o.includes(n) && "function" == typeof n && n.call(e, t))
                    }
                    ,
                    e._events[n].list = [],
                    e.attachEvent && e.attachEvent("on" + n, e._events[n])),
                    e._events[n].list.push(o)
                }
                ,
                window.removeEventListener = Window.prototype.removeEventListener = Document.prototype.removeEventListener = Element.prototype.removeEventListener = function i() {
                    var e, t = this, n = arguments[0], o = arguments[1];
                    t._events && t._events[n] && t._events[n].list && -1 !== (e = t._events[n].list.indexOf(o)) && (t._events[n].list.splice(e, 1),
                    t._events[n].list.length || (t.detachEvent && t.detachEvent("on" + n, t._events[n]),
                    delete t._events[n]))
                }
                ,
                window.dispatchEvent = Window.prototype.dispatchEvent = Document.prototype.dispatchEvent = Element.prototype.dispatchEvent = function r(e) {
                    if (!arguments.length)
                        throw new Error("Not enough arguments");
                    if (!e || "string" != typeof e.type)
                        throw new Error("DOM Events Exception 0");
                    var t = this
                      , n = e.type;
                    try {
                        if (!e.bubbles) {
                            e.cancelBubble = !0;
                            var o = function(e) {
                                e.cancelBubble = !0,
                                (t || window).detachEvent("on" + n, o)
                            };
                            this.attachEvent("on" + n, o)
                        }
                        this.fireEvent("on" + n, e)
                    } catch (i) {
                        e.target = t;
                        do {
                            e.currentTarget = t,
                            "_events"in t && "function" == typeof t._events[n] && t._events[n].call(t, e),
                            "function" == typeof t["on" + n] && t["on" + n].call(t, e),
                            t = 9 === t.nodeType ? t.parentWindow : t.parentNode
                        } while (t && !e.cancelBubble)
                    }
                    return !0
                }
                ,
                document.attachEvent("onreadystatechange", function() {
                    "complete" === document.readyState && document.dispatchEvent(new e("DOMContentLoaded",{
                        bubbles: !0
                    }))
                }))
            }
        }();
    }
    if (!("IntersectionObserver"in window && "IntersectionObserverEntry"in window && "intersectionRatio"in window.IntersectionObserverEntry.prototype)) {
        !function(t, e) {
            "use strict";
            function n(t) {
                this.time = t.time,
                this.target = t.target,
                this.rootBounds = t.rootBounds,
                this.boundingClientRect = t.boundingClientRect,
                this.intersectionRect = t.intersectionRect || a();
                try {
                    this.isIntersecting = !!t.intersectionRect
                } catch (r) {}
                var e = this.boundingClientRect
                  , n = e.width * e.height
                  , o = this.intersectionRect
                  , i = o.width * o.height;
                this.intersectionRatio = n ? Number((i / n).toFixed(4)) : this.isIntersecting ? 1 : 0
            }
            function o(t, e) {
                var n = e || {};
                if ("function" != typeof t)
                    throw new Error("callback must be a function");
                if (n.root && 1 != n.root.nodeType)
                    throw new Error("root must be an Element");
                this._checkForIntersections = r(this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT),
                this._callback = t,
                this._observationTargets = [],
                this._queuedEntries = [],
                this._rootMarginValues = this._parseRootMargin(n.rootMargin),
                this.thresholds = this._initThresholds(n.threshold),
                this.root = n.root || null,
                this.rootMargin = this._rootMarginValues.map(function(t) {
                    return t.value + t.unit
                }).join(" ")
            }
            function i() {
                return t.performance && performance.now && performance.now()
            }
            function r(t, e) {
                var n = null;
                return function() {
                    n || (n = setTimeout(function() {
                        t(),
                        n = null
                    }, e))
                }
            }
            function s(t, e, n, o) {
                "function" == typeof t.addEventListener ? t.addEventListener(e, n, o || !1) : "function" == typeof t.attachEvent && t.attachEvent("on" + e, n)
            }
            function h(t, e, n, o) {
                "function" == typeof t.removeEventListener ? t.removeEventListener(e, n, o || !1) : "function" == typeof t.detatchEvent && t.detatchEvent("on" + e, n)
            }
            function c(t, e) {
                var n = Math.max(t.top, e.top)
                  , o = Math.min(t.bottom, e.bottom)
                  , i = Math.max(t.left, e.left)
                  , r = Math.min(t.right, e.right)
                  , s = r - i
                  , h = o - n;
                return s >= 0 && h >= 0 && {
                    top: n,
                    bottom: o,
                    left: i,
                    right: r,
                    width: s,
                    height: h
                }
            }
            function u(t) {
                var e;
                try {
                    e = t.getBoundingClientRect()
                } catch (n) {}
                return e ? (e.width && e.height || (e = {
                    top: e.top,
                    right: e.right,
                    bottom: e.bottom,
                    left: e.left,
                    width: e.right - e.left,
                    height: e.bottom - e.top
                }),
                e) : a()
            }
            function a() {
                return {
                    top: 0,
                    bottom: 0,
                    left: 0,
                    right: 0,
                    width: 0,
                    height: 0
                }
            }
            function l(t, e) {
                for (var n = e; n; ) {
                    if (n == t)
                        return !0;
                    n = p(n)
                }
                return !1
            }
            function p(t) {
                var e = t.parentNode;
                return e && 11 == e.nodeType && e.host ? e.host : e && e.assignedSlot ? e.assignedSlot.parentNode : e
            }
            var f = [];
            o.prototype.THROTTLE_TIMEOUT = 100,
            o.prototype.POLL_INTERVAL = null,
            o.prototype.USE_MUTATION_OBSERVER = !0,
            o.prototype.observe = function(t) {
                if (!this._observationTargets.some(function(e) {
                    return e.element == t
                })) {
                    if (!t || 1 != t.nodeType)
                        throw new Error("target must be an Element");
                    this._registerInstance(),
                    this._observationTargets.push({
                        element: t,
                        entry: null
                    }),
                    this._monitorIntersections(),
                    this._checkForIntersections()
                }
            }
            ,
            o.prototype.unobserve = function(t) {
                this._observationTargets = this._observationTargets.filter(function(e) {
                    return e.element != t
                }),
                this._observationTargets.length || (this._unmonitorIntersections(),
                this._unregisterInstance())
            }
            ,
            o.prototype.disconnect = function() {
                this._observationTargets = [],
                this._unmonitorIntersections(),
                this._unregisterInstance()
            }
            ,
            o.prototype.takeRecords = function() {
                var t = this._queuedEntries.slice();
                return this._queuedEntries = [],
                t
            }
            ,
            o.prototype._initThresholds = function(t) {
                var e = t || [0];
                return Array.isArray(e) || (e = [e]),
                e.sort().filter(function(t, e, n) {
                    if ("number" != typeof t || isNaN(t) || t < 0 || t > 1)
                        throw new Error("threshold must be a number between 0 and 1 inclusively");
                    return t !== n[e - 1]
                })
            }
            ,
            o.prototype._parseRootMargin = function(t) {
                var e = t || "0px"
                  , n = e.split(/\s+/).map(function(t) {
                    var e = /^(-?\d*\.?\d+)(px|%)$/.exec(t);
                    if (!e)
                        throw new Error("rootMargin must be specified in pixels or percent");
                    return {
                        value: parseFloat(e[1]),
                        unit: e[2]
                    }
                });
                return n[1] = n[1] || n[0],
                n[2] = n[2] || n[0],
                n[3] = n[3] || n[1],
                n
            }
            ,
            o.prototype._monitorIntersections = function() {
                this._monitoringIntersections || (this._monitoringIntersections = !0,
                this.POLL_INTERVAL ? this._monitoringInterval = setInterval(this._checkForIntersections, this.POLL_INTERVAL) : (s(t, "resize", this._checkForIntersections, !0),
                s(e, "scroll", this._checkForIntersections, !0),
                this.USE_MUTATION_OBSERVER && "MutationObserver"in t && (this._domObserver = new MutationObserver(this._checkForIntersections),
                this._domObserver.observe(e, {
                    attributes: !0,
                    childList: !0,
                    characterData: !0,
                    subtree: !0
                }))))
            }
            ,
            o.prototype._unmonitorIntersections = function() {
                this._monitoringIntersections && (this._monitoringIntersections = !1,
                clearInterval(this._monitoringInterval),
                this._monitoringInterval = null,
                h(t, "resize", this._checkForIntersections, !0),
                h(e, "scroll", this._checkForIntersections, !0),
                this._domObserver && (this._domObserver.disconnect(),
                this._domObserver = null))
            }
            ,
            o.prototype._checkForIntersections = function() {
                var t = this._rootIsInDom()
                  , e = t ? this._getRootRect() : a();
                this._observationTargets.forEach(function(o) {
                    var r = o.element
                      , s = u(r)
                      , h = this._rootContainsTarget(r)
                      , c = o.entry
                      , a = t && h && this._computeTargetAndRootIntersection(r, e)
                      , l = o.entry = new n({
                        time: i(),
                        target: r,
                        boundingClientRect: s,
                        rootBounds: e,
                        intersectionRect: a
                    });
                    c ? t && h ? this._hasCrossedThreshold(c, l) && this._queuedEntries.push(l) : c && c.isIntersecting && this._queuedEntries.push(l) : this._queuedEntries.push(l)
                }, this),
                this._queuedEntries.length && this._callback(this.takeRecords(), this)
            }
            ,
            o.prototype._computeTargetAndRootIntersection = function(n, o) {
                if ("none" != t.getComputedStyle(n).display) {
                    for (var i = u(n), r = i, s = p(n), h = !1; !h; ) {
                        var a = null
                          , l = 1 == s.nodeType ? t.getComputedStyle(s) : {};
                        if ("none" == l.display)
                            return;
                        if (s == this.root || s == e ? (h = !0,
                        a = o) : s != e.body && s != e.documentElement && "visible" != l.overflow && (a = u(s)),
                        a && !(r = c(a, r)))
                            break;
                        s = p(s)
                    }
                    return r
                }
            }
            ,
            o.prototype._getRootRect = function() {
                var t;
                if (this.root)
                    t = u(this.root);
                else {
                    var n = e.documentElement
                      , o = e.body;
                    t = {
                        top: 0,
                        left: 0,
                        right: n.clientWidth || o.clientWidth,
                        width: n.clientWidth || o.clientWidth,
                        bottom: n.clientHeight || o.clientHeight,
                        height: n.clientHeight || o.clientHeight
                    }
                }
                return this._expandRectByRootMargin(t)
            }
            ,
            o.prototype._expandRectByRootMargin = function(t) {
                var e = this._rootMarginValues.map(function(e, n) {
                    return "px" == e.unit ? e.value : e.value * (n % 2 ? t.width : t.height) / 100
                })
                  , n = {
                    top: t.top - e[0],
                    right: t.right + e[1],
                    bottom: t.bottom + e[2],
                    left: t.left - e[3]
                };
                return n.width = n.right - n.left,
                n.height = n.bottom - n.top,
                n
            }
            ,
            o.prototype._hasCrossedThreshold = function(t, e) {
                var n = t && t.isIntersecting ? t.intersectionRatio || 0 : -1
                  , o = e.isIntersecting ? e.intersectionRatio || 0 : -1;
                if (n !== o)
                    for (var i = 0; i < this.thresholds.length; i++) {
                        var r = this.thresholds[i];
                        if (r == n || r == o || r < n != r < o)
                            return !0
                    }
            }
            ,
            o.prototype._rootIsInDom = function() {
                return !this.root || l(e, this.root)
            }
            ,
            o.prototype._rootContainsTarget = function(t) {
                return l(this.root || e, t)
            }
            ,
            o.prototype._registerInstance = function() {
                f.indexOf(this) < 0 && f.push(this)
            }
            ,
            o.prototype._unregisterInstance = function() {
                var t = f.indexOf(this);
                -1 != t && f.splice(t, 1)
            }
            ,
            t.IntersectionObserver = o,
            t.IntersectionObserverEntry = n
        }(window, document);
    }
    if (!("getOwnPropertyDescriptor"in Object && "function" == typeof Object.getOwnPropertyDescriptor && function() {
        try {
            return "3" === Object.getOwnPropertyDescriptor("13.7", 1).value
        } catch (t) {
            return !1
        }
    }())) {
        !function() {
            var e = Object.getOwnPropertyDescriptor
              , t = function() {
                try {
                    return 1 === Object.defineProperty(document.createElement("div"), "one", {
                        get: function() {
                            return 1
                        }
                    }).one
                } catch (e) {
                    return !1
                }
            }
              , r = {}.toString
              , n = "".split;
            CreateMethodProperty(Object, "getOwnPropertyDescriptor", function c(o, i) {
                var a = ToObject(o);
                a = ("string" === Type(a) || a instanceof String) && "[object String]" == r.call(o) ? n.call(o, "") : Object(o);
                var u = ToPropertyKey(i);
                if (t)
                    try {
                        return e(a, u)
                    } catch (l) {}
                if (HasOwnProperty(a, u))
                    return {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: a[u]
                    }
            })
        }();
    }
    if (!("keys"in Object && function() {
        return 2 === Object.keys(arguments).length
    }(1, 2) && function() {
        try {
            return Object.keys(""),
            !0
        } catch (t) {
            return !1
        }
    }())) {
        CreateMethodProperty(Object, "keys", function() {
            "use strict";
            function t(t) {
                var e = r.call(t)
                  , n = "[object Arguments]" === e;
                return n || (n = "[object Array]" !== e && null !== t && "object" == typeof t && "number" == typeof t.length && t.length >= 0 && "[object Function]" === r.call(t.callee)),
                n
            }
            var e = Object.prototype.hasOwnProperty
              , r = Object.prototype.toString
              , n = Object.prototype.propertyIsEnumerable
              , o = !n.call({
                toString: null
            }, "toString")
              , l = n.call(function() {}, "prototype")
              , c = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"]
              , i = function(t) {
                var e = t.constructor;
                return e && e.prototype === t
            }
              , u = {
                $console: !0,
                $external: !0,
                $frame: !0,
                $frameElement: !0,
                $frames: !0,
                $innerHeight: !0,
                $innerWidth: !0,
                $outerHeight: !0,
                $outerWidth: !0,
                $pageXOffset: !0,
                $pageYOffset: !0,
                $parent: !0,
                $scrollLeft: !0,
                $scrollTop: !0,
                $scrollX: !0,
                $scrollY: !0,
                $self: !0,
                $webkitIndexedDB: !0,
                $webkitStorageInfo: !0,
                $window: !0
            }
              , a = function() {
                if ("undefined" == typeof window)
                    return !1;
                for (var t in window)
                    try {
                        if (!u["$" + t] && e.call(window, t) && null !== window[t] && "object" == typeof window[t])
                            try {
                                i(window[t])
                            } catch (r) {
                                return !0
                            }
                    } catch (r) {
                        return !0
                    }
                return !1
            }()
              , f = function(t) {
                if ("undefined" == typeof window || !a)
                    return i(t);
                try {
                    return i(t)
                } catch (e) {
                    return !1
                }
            };
            return function p(n) {
                var i = "[object Function]" === r.call(n)
                  , u = t(n)
                  , a = "[object String]" === r.call(n)
                  , p = [];
                if (n === undefined || null === n)
                    throw new TypeError("Cannot convert undefined or null to object");
                var s = l && i;
                if (a && n.length > 0 && !e.call(n, 0))
                    for (var y = 0; y < n.length; ++y)
                        p.push(String(y));
                if (u && n.length > 0)
                    for (var g = 0; g < n.length; ++g)
                        p.push(String(g));
                else
                    for (var h in n)
                        s && "prototype" === h || !e.call(n, h) || p.push(String(h));
                if (o)
                    for (var w = f(n), d = 0; d < c.length; ++d)
                        w && "constructor" === c[d] || !e.call(n, c[d]) || p.push(c[d]);
                return p
            }
        }());
    }
    if (!("assign"in Object)) {
        CreateMethodProperty(Object, "assign", function e(t, r) {
            var n = ToObject(t);
            if (1 === arguments.length)
                return n;
            var o, c, a, l, i = Array.prototype.slice.call(arguments, 1);
            for (o = 0; o < i.length; o++) {
                var p = i[o];
                for (p === undefined || null === p ? a = [] : (l = "[object String]" === Object.prototype.toString.call(p) ? String(p).split("") : ToObject(p),
                a = Object.keys(l)),
                c = 0; c < a.length; c++) {
                    var b, y = a[c];
                    try {
                        var g = Object.getOwnPropertyDescriptor(l, y);
                        b = g !== undefined && !0 === g.enumerable
                    } catch (u) {
                        b = Object.prototype.propertyIsEnumerable.call(l, y)
                    }
                    if (b) {
                        var j = Get(l, y);
                        n[y] = j
                    }
                }
            }
            return n
        });
    }
}
)('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});
